plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
    id 'org.springdoc.openapi-gradle-plugin' version "1.7.0"
}

apply plugin: 'io.spring.dependency-management'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'momongo12.fintech'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
    resilience4jVersion = "2.1.0"
    h2Version = "2.2.224"
    lombokVersion = "1.18.30"
    liquibaseVersion = "4.24.0"
}

configurations {
    runtimeClasspath {
        extendsFrom testCompileClasspath, testRuntimeClasspath, testImplementation
    }
}

dependencies {
    // Lombok
    compileOnly "org.projectlombok:lombok:${lombokVersion}"
    testCompileOnly "org.projectlombok:lombok:${lombokVersion}"
    annotationProcessor "org.projectlombok:lombok:${lombokVersion}"
    testAnnotationProcessor "org.projectlombok:lombok:${lombokVersion}"

    // Spring
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation ('org.springframework.boot:spring-boot-starter-aop') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation ('org.springframework.boot:spring-boot-starter-data-jpa') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation ('org.springframework.boot:spring-boot-starter-security') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    implementation 'org.springframework.kafka:spring-kafka'


    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    testAnnotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // Test
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    testImplementation 'org.junit.platform:junit-platform-runner:1.10.0'
    testImplementation 'org.springframework.boot:spring-boot-testcontainers'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.springframework.security:spring-security-test:6.1.5'

    // Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // resilience4j
    implementation "io.github.resilience4j:resilience4j-spring-boot3:${resilience4jVersion}"

    //database
    implementation "com.h2database:h2:${h2Version}"
    implementation "org.liquibase:liquibase-core:${liquibaseVersion}"


}

tasks.register('createFatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'momongo12.fintech.TestRunner'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.test.output
    with jar
}

test {
    useJUnitPlatform()
}
