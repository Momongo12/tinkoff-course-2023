plugins {
    id 'java'
    id 'org.springframework.boot' version '3.1.4'
}


apply plugin: 'io.spring.dependency-management'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

group = 'momongo12.fintech'
version = '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

ext {
    mapstructVersion = "1.5.5.Final"
}

dependencies {
    // Lombok
    compileOnly 'org.projectlombok:lombok:1.18.30'
    testCompileOnly 'org.projectlombok:lombok:1.18.30'
    annotationProcessor 'org.projectlombok:lombok:1.18.30'
    testAnnotationProcessor 'org.projectlombok:lombok:1.18.30'

    // Spring
    implementation ('org.springframework.boot:spring-boot-starter-web') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }

    // MapStruct
    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"
    implementation 'org.projectlombok:lombok-mapstruct-binding:0.2.0'

    // Logging
    implementation 'org.springframework.boot:spring-boot-starter-log4j2'

    // Test
    testImplementation ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    testImplementation 'org.junit.platform:junit-platform-runner:1.10.0'
}

tasks.register('createFatJar', Jar) {
    manifest {
        attributes 'Main-Class': 'momongo12.fintech.TestRunner'
    }
    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
    from sourceSets.test.output
    with jar
}


test {
    useJUnitPlatform()
}
